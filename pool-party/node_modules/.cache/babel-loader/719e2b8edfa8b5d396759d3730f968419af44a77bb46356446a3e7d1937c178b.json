{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitize = void 0;\nconst chain_1 = require(\"../chain\");\nconst utils_1 = require(\"../utils\");\nconst context_builder_1 = require(\"../context-builder\");\nlet hasNotified = false;\nfunction sanitize() {\n  let fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let locations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  if (!hasNotified) {\n    hasNotified = true;\n    console.warn('express-validator: sanitize(), sanitizeBody() and other sanitization-only middlewares ' + 'have been deprecated.\\nPlease use check(), body() and others instead, which must offer ' + 'the same API, and more.');\n  }\n  const builder = new context_builder_1.ContextBuilder().setFields(Array.isArray(fields) ? fields : [fields]).setLocations(locations);\n  const runner = new chain_1.ContextRunnerImpl(builder);\n  const middleware = async (req, _res, next) => {\n    try {\n      await runner.run(req);\n      next();\n    } catch (e) {\n      next(e);\n    }\n  };\n  return Object.assign(middleware, utils_1.bindAll(runner), utils_1.bindAll(new chain_1.SanitizersImpl(builder, middleware)), {\n    builder\n  });\n}\nexports.sanitize = sanitize;","map":{"version":3,"names":["Object","defineProperty","exports","value","sanitize","chain_1","require","utils_1","context_builder_1","hasNotified","fields","locations","console","warn","builder","ContextBuilder","setFields","Array","isArray","setLocations","runner","ContextRunnerImpl","middleware","req","_res","next","run","e","assign","bindAll","SanitizersImpl"],"sources":["/Users/collin/SeniorProject/pool-party/node_modules/express-validator/src/middlewares/sanitize.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sanitize = void 0;\nconst chain_1 = require(\"../chain\");\nconst utils_1 = require(\"../utils\");\nconst context_builder_1 = require(\"../context-builder\");\nlet hasNotified = false;\nfunction sanitize(fields = '', locations = []) {\n    if (!hasNotified) {\n        hasNotified = true;\n        console.warn('express-validator: sanitize(), sanitizeBody() and other sanitization-only middlewares ' +\n            'have been deprecated.\\nPlease use check(), body() and others instead, which must offer ' +\n            'the same API, and more.');\n    }\n    const builder = new context_builder_1.ContextBuilder()\n        .setFields(Array.isArray(fields) ? fields : [fields])\n        .setLocations(locations);\n    const runner = new chain_1.ContextRunnerImpl(builder);\n    const middleware = async (req, _res, next) => {\n        try {\n            await runner.run(req);\n            next();\n        }\n        catch (e) {\n            next(e);\n        }\n    };\n    return Object.assign(middleware, utils_1.bindAll(runner), utils_1.bindAll(new chain_1.SanitizersImpl(builder, middleware)), { builder });\n}\nexports.sanitize = sanitize;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAU,CAAC;AACnC,MAAME,iBAAiB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACvD,IAAIG,WAAW,GAAG,KAAK;AACvB,SAASL,QAAQ,GAA8B;EAAA,IAA7BM,MAAM,uEAAG,EAAE;EAAA,IAAEC,SAAS,uEAAG,EAAE;EACzC,IAAI,CAACF,WAAW,EAAE;IACdA,WAAW,GAAG,IAAI;IAClBG,OAAO,CAACC,IAAI,CAAC,wFAAwF,GACjG,yFAAyF,GACzF,yBAAyB,CAAC;EAClC;EACA,MAAMC,OAAO,GAAG,IAAIN,iBAAiB,CAACO,cAAc,EAAE,CACjDC,SAAS,CAACC,KAAK,CAACC,OAAO,CAACR,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC,CAAC,CACpDS,YAAY,CAACR,SAAS,CAAC;EAC5B,MAAMS,MAAM,GAAG,IAAIf,OAAO,CAACgB,iBAAiB,CAACP,OAAO,CAAC;EACrD,MAAMQ,UAAU,GAAG,OAAOC,GAAG,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAC1C,IAAI;MACA,MAAML,MAAM,CAACM,GAAG,CAACH,GAAG,CAAC;MACrBE,IAAI,EAAE;IACV,CAAC,CACD,OAAOE,CAAC,EAAE;MACNF,IAAI,CAACE,CAAC,CAAC;IACX;EACJ,CAAC;EACD,OAAO3B,MAAM,CAAC4B,MAAM,CAACN,UAAU,EAAEf,OAAO,CAACsB,OAAO,CAACT,MAAM,CAAC,EAAEb,OAAO,CAACsB,OAAO,CAAC,IAAIxB,OAAO,CAACyB,cAAc,CAAChB,OAAO,EAAEQ,UAAU,CAAC,CAAC,EAAE;IAAER;EAAQ,CAAC,CAAC;AAC5I;AACAZ,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}