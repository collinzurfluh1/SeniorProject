{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkSchema = void 0;\nconst chain_1 = require(\"../chain\");\nconst check_1 = require(\"./check\");\nconst validLocations = ['body', 'cookies', 'headers', 'params', 'query'];\nconst protectedNames = ['errorMessage', 'in'];\nfunction checkSchema(schema) {\n  let defaultLocations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : validLocations;\n  const chains = Object.keys(schema).map(field => {\n    const config = schema[field];\n    const chain = check_1.check(field, ensureLocations(config, defaultLocations), config.errorMessage);\n    Object.keys(config).filter(method => {\n      return config[method] && !protectedNames.includes(method);\n    }).forEach(method => {\n      var _a;\n      if (typeof chain[method] !== 'function') {\n        console.warn(`express-validator: a validator/sanitizer with name ${method} does not exist`);\n        return;\n      }\n      // Using \"!\" because typescript doesn't know it isn't undefined.\n      const methodCfg = config[method];\n      let options = methodCfg === true ? [] : (_a = methodCfg.options) !== null && _a !== void 0 ? _a : [];\n      if (options != null && !Array.isArray(options)) {\n        options = [options];\n      }\n      if (isValidatorOptions(method, methodCfg) && methodCfg.if) {\n        chain.if(methodCfg.if);\n      }\n      if (isValidatorOptions(method, methodCfg) && methodCfg.negated) {\n        chain.not();\n      }\n      chain[method](...options);\n      if (isValidatorOptions(method, methodCfg) && methodCfg.errorMessage) {\n        chain.withMessage(methodCfg.errorMessage);\n      }\n      if (isValidatorOptions(method, methodCfg) && methodCfg.bail) {\n        chain.bail();\n      }\n    });\n    return chain;\n  });\n  const run = async req => {\n    return await Promise.all(chains.map(chain => chain.run(req)));\n  };\n  return Object.assign(chains, {\n    run\n  });\n}\nexports.checkSchema = checkSchema;\nfunction isValidatorOptions(method, methodCfg) {\n  return methodCfg !== true && method in chain_1.ValidatorsImpl.prototype;\n}\nfunction ensureLocations(config, defaults) {\n  // .filter(Boolean) is done because in can be undefined -- which is not going away from the type\n  // See https://github.com/Microsoft/TypeScript/pull/29955 for details\n  const locations = Array.isArray(config.in) ? config.in : [config.in].filter(Boolean);\n  const actualLocations = locations.length ? locations : defaults;\n  return actualLocations.filter(location => validLocations.includes(location));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","checkSchema","chain_1","require","check_1","validLocations","protectedNames","schema","defaultLocations","chains","keys","map","field","config","chain","check","ensureLocations","errorMessage","filter","method","includes","forEach","_a","console","warn","methodCfg","options","Array","isArray","isValidatorOptions","if","negated","not","withMessage","bail","run","req","Promise","all","assign","ValidatorsImpl","prototype","defaults","locations","in","Boolean","actualLocations","length","location"],"sources":["/Users/collin/SeniorProject/pool-party/node_modules/express-validator/src/middlewares/schema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkSchema = void 0;\nconst chain_1 = require(\"../chain\");\nconst check_1 = require(\"./check\");\nconst validLocations = ['body', 'cookies', 'headers', 'params', 'query'];\nconst protectedNames = ['errorMessage', 'in'];\nfunction checkSchema(schema, defaultLocations = validLocations) {\n    const chains = Object.keys(schema).map(field => {\n        const config = schema[field];\n        const chain = check_1.check(field, ensureLocations(config, defaultLocations), config.errorMessage);\n        Object.keys(config)\n            .filter((method) => {\n            return config[method] && !protectedNames.includes(method);\n        })\n            .forEach(method => {\n            var _a;\n            if (typeof chain[method] !== 'function') {\n                console.warn(`express-validator: a validator/sanitizer with name ${method} does not exist`);\n                return;\n            }\n            // Using \"!\" because typescript doesn't know it isn't undefined.\n            const methodCfg = config[method];\n            let options = methodCfg === true ? [] : (_a = methodCfg.options) !== null && _a !== void 0 ? _a : [];\n            if (options != null && !Array.isArray(options)) {\n                options = [options];\n            }\n            if (isValidatorOptions(method, methodCfg) && methodCfg.if) {\n                chain.if(methodCfg.if);\n            }\n            if (isValidatorOptions(method, methodCfg) && methodCfg.negated) {\n                chain.not();\n            }\n            chain[method](...options);\n            if (isValidatorOptions(method, methodCfg) && methodCfg.errorMessage) {\n                chain.withMessage(methodCfg.errorMessage);\n            }\n            if (isValidatorOptions(method, methodCfg) && methodCfg.bail) {\n                chain.bail();\n            }\n        });\n        return chain;\n    });\n    const run = async (req) => {\n        return await Promise.all(chains.map(chain => chain.run(req)));\n    };\n    return Object.assign(chains, { run });\n}\nexports.checkSchema = checkSchema;\nfunction isValidatorOptions(method, methodCfg) {\n    return methodCfg !== true && method in chain_1.ValidatorsImpl.prototype;\n}\nfunction ensureLocations(config, defaults) {\n    // .filter(Boolean) is done because in can be undefined -- which is not going away from the type\n    // See https://github.com/Microsoft/TypeScript/pull/29955 for details\n    const locations = Array.isArray(config.in)\n        ? config.in\n        : [config.in].filter(Boolean);\n    const actualLocations = locations.length ? locations : defaults;\n    return actualLocations.filter(location => validLocations.includes(location));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}